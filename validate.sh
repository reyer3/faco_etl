#!/bin/bash

# FACO ETL Quick Validation Script
# Usage: ./validate.sh

echo "üöÄ FACO ETL - Quick Validation"
echo "================================"

# Colors for output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
NC='\033[0m' # No Color

# Check if Python is available
echo "üêç Checking Python..."
if command -v python3 &> /dev/null; then
    PYTHON_VERSION=$(python3 --version)
    echo -e "${GREEN}‚úÖ $PYTHON_VERSION found${NC}"
else
    echo -e "${RED}‚ùå Python 3 not found${NC}"
    exit 1
fi

# Check if Docker is available
echo ""
echo "üê≥ Checking Docker..."
if command -v docker &> /dev/null; then
    DOCKER_VERSION=$(docker --version)
    echo -e "${GREEN}‚úÖ $DOCKER_VERSION found${NC}"
else
    echo -e "${YELLOW}‚ö†Ô∏è  Docker not found (optional)${NC}"
fi

# Check if docker-compose is available
echo ""
echo "üîß Checking Docker Compose..."
if command -v docker-compose &> /dev/null; then
    COMPOSE_VERSION=$(docker-compose --version)
    echo -e "${GREEN}‚úÖ $COMPOSE_VERSION found${NC}"
else
    echo -e "${YELLOW}‚ö†Ô∏è  Docker Compose not found (optional)${NC}"
fi

# Check project structure
echo ""
echo "üìÅ Checking project structure..."

required_files=(
    "main.py"
    "requirements.txt"
    "Dockerfile"
    "docker-compose.yml"
    ".env.example"
    "src/core/config.py"
    "src/core/logger.py"
    "src/core/orchestrator.py"
)

for file in "${required_files[@]}"; do
    if [ -f "$file" ]; then
        echo -e "${GREEN}‚úÖ $file${NC}"
    else
        echo -e "${RED}‚ùå $file missing${NC}"
    fi
done

# Test Python imports (if dependencies are installed)
echo ""
echo "üì¶ Testing Python imports..."
python3 -c "
import sys
try:
    import click
    print('‚úÖ click')
except ImportError:
    print('‚ùå click (pip install click)')

try:
    import pandas
    print('‚úÖ pandas')
except ImportError:
    print('‚ùå pandas (pip install pandas)')

try:
    from loguru import logger
    print('‚úÖ loguru')
except ImportError:
    print('‚ùå loguru (pip install loguru)')

try:
    from dotenv import load_dotenv
    print('‚úÖ python-dotenv')
except ImportError:
    print('‚ùå python-dotenv (pip install python-dotenv)')
"

# Run validation test if possible
echo ""
echo "üß™ Running validation tests..."
if [ -f "tests/test_validation.py" ]; then
    python3 tests/test_validation.py
else
    echo -e "${RED}‚ùå test_validation.py not found${NC}"
fi

echo ""
echo "================================"
echo "üéØ Next Steps:"
echo ""
echo "1. Install dependencies:"
echo "   pip install -r requirements.txt"
echo ""
echo "2. Setup credentials:"
echo "   mkdir credentials"
echo "   cp your-service-account.json credentials/key.json"
echo ""
echo "3. Configure environment:"
echo "   cp .env.example .env"
echo "   # Edit .env with your settings"
echo ""
echo "4. Test run:"
echo "   python main.py --mes 2025-06 --estado abierto --dry-run"
echo ""
echo "5. Docker run:"
echo "   docker-compose up etl"
